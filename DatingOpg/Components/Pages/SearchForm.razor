@page "/search"
@using DatingOpg.Models
@using DatingOpg.Services
@inject ProfileService ProfileService

<PageTitle>Search Profiles</PageTitle>

<h3>Search Profiles</h3>

<EditForm Model="@searchCriteria" OnValidSubmit="PerformSearch">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="nickname" class="form-label">NickName:</label>
        <InputText id="nickname" @bind-Value="searchCriteria.NickName" class="form-control" />
    </div>
    <div class="mb-3">
        <label for="gender" class="form-label">Gender:</label>
        <InputSelect id="gender" @bind-Value="searchCriteria.Gender" class="form-control">
            <option value="">Select</option>
            <option value="Male">Male</option>
            <option value="Female">Female</option>
        </InputSelect>
    </div>
    <div class="mb-3">
        <label for="minAge" class="form-label">Min Age:</label>
        <InputNumber id="minAge" @bind-Value="searchCriteria.MinAge" class="form-control" />
    </div>
    <div class="mb-3">
        <label for="maxAge" class="form-label">Max Age:</label>
        <InputNumber id="maxAge" @bind-Value="searchCriteria.MaxAge" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
</EditForm>

@if (profiles != null)
{
    <h3>Results</h3>
    <table class="table">
        <thead>
            <tr>
                <th>NickName</th>
                <th>Gender</th>
                <th>Age</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var profile in profiles)
            {
                <tr>
                    <td>@profile.NickName</td>
                    <td>@profile.Gender</td>
                    <td>@(DateTime.Now.Year - profile.BirthDate.Year)</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => LikeProfile(profile.ProfileId)">Like</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private SearchCriteria searchCriteria = new();
    private List<Profile> profiles;

    private async Task PerformSearch()
    {
        profiles = await ProfileService.SearchProfilesAsync(searchCriteria);
    }

    private async Task LikeProfile(int profileId)
    {
        await ProfileService.LikeProfileAsync(profileId);
    }
}
